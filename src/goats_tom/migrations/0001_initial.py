# Generated by Django 4.2.11 on 2024-04-26 22:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_cryptography.fields
import goats_tom.models.program_key


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("tom_observations", "0012_auto_20210205_1819"),
        ("tom_dataproducts", "0012_alter_reduceddatum_data_product_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DataProductMetadata",
            fields=[
                (
                    "data_product",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="metadata",
                        serialize=False,
                        to="tom_dataproducts.dataproduct",
                    ),
                ),
                ("file_type", models.CharField(blank=True, max_length=50, null=True)),
                ("group_id", models.CharField(blank=True, max_length=255, null=True)),
                ("exposure_time", models.FloatField(blank=True, null=True)),
                (
                    "object_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("central_wavelength", models.FloatField(blank=True, null=True)),
                (
                    "wavelength_band",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("observation_date", models.DateField(blank=True, null=True)),
                ("roi_setting", models.CharField(blank=True, max_length=50, null=True)),
                ("modified", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserKey",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    django_cryptography.fields.encrypt(
                        models.CharField(max_length=100)
                    ),
                ),
                (
                    "site",
                    models.CharField(
                        choices=[("GS", "Gemini South"), ("GN", "Gemini North")],
                        max_length=2,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("email", models.EmailField(max_length=254)),
                ("is_active", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProgramKey",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    django_cryptography.fields.encrypt(
                        models.CharField(max_length=100)
                    ),
                ),
                (
                    "site",
                    models.CharField(
                        choices=[("GS", "Gemini South"), ("GN", "Gemini North")],
                        max_length=2,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "program_id",
                    models.CharField(
                        max_length=100,
                        validators=[goats_tom.models.program_key.validate_program_id],
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GOALogin",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=100)),
                (
                    "password",
                    django_cryptography.fields.encrypt(
                        models.CharField(max_length=128)
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="goa_login",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "GOA Login",
                "verbose_name_plural": "GOA Logins",
            },
        ),
        migrations.CreateModel(
            name="DRAGONSRun",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("run_id", models.CharField(blank=True, max_length=255)),
                (
                    "config_filename",
                    models.CharField(
                        default="dragonsrc", editable=False, max_length=30
                    ),
                ),
                ("output_directory", models.CharField(blank=True, max_length=255)),
                (
                    "cal_manager_filename",
                    models.CharField(
                        default="cal_manager.db", editable=False, max_length=30
                    ),
                ),
                (
                    "log_filename",
                    models.CharField(default="log.log", editable=False, max_length=30),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "observation_record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dragons_runs",
                        to="tom_observations.observationrecord",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DRAGONSFile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("enabled", models.BooleanField(default=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "data_product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tom_dataproducts.dataproduct",
                    ),
                ),
                (
                    "dragons_run",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dragons_run_files",
                        to="goats_tom.dragonsrun",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Download",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("unique_id", models.CharField(max_length=255)),
                ("observation_id", models.CharField(max_length=255)),
                ("status", models.CharField(default="Running", max_length=50)),
                ("done", models.BooleanField(default=False)),
                ("error", models.BooleanField(default=False)),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("message", models.TextField(blank=True, null=True)),
                ("num_files_downloaded", models.IntegerField(blank=True, null=True)),
                ("num_files_omitted", models.IntegerField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="dragonsrun",
            index=models.Index(fields=["run_id"], name="run_id_idx"),
        ),
        migrations.AddConstraint(
            model_name="dragonsrun",
            constraint=models.UniqueConstraint(
                fields=("observation_record", "run_id"),
                name="unique_observation_run_id",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="dragonsfile",
            unique_together={("dragons_run", "data_product")},
        ),
    ]
